장고란?
파이썬으로 웹 개발을 쉽게 할 수 있도록 도와주는 웹 프레임워크

장고의 작동구조: MTV 패턴 방식
장고로 만든 웹 사이트는 모델로 자료의 형태를 정의하고
뷰로 어떤 자료를 동작으로 보여줄지 정의하며
템플릿으로 웹 페이지에서 출력할 모습을 정의한다

1. 클라이언트의 요청
2. urls.py 확인
3. views.py 확인
4. views.py가 models.py 확인
5. models.py가 DB를 확인
6. 넘겨받은 views.ppy가 탬플릿에 채워서 출력

프로젝트 생성: 
- django-admin startproject "프로젝트명"
- python manage.py startapp "앱명"을 통해 앱 생성

앱 생성 후 settings.py의 INSTALLED_APPS리스트에 추가

manage.py 장고 프로젝트와 다양한 방식으로 상호작용할 수 있게 해주는 유틸리티
__init__.py: 이 디렉터리는 python디렉터리임을 알려줌
settings.py 장고 프로젝트의 설정이다
urls.py: 장고 프로젝트에 대한 URL선언

장고는 서버 실행 후, admin 사이트를 기본으로 제공해준다


Model: 

models.py에서는 앱 db를 관리한다
python manage.py migrate를 통해 db 테이블을 생성한다
db 테이블에 들어갈 model을 생성하고 python manage.py migrate를 통해 
데이베이스에 생성한 model의 테이블을 넣는다

모델 변경의 3단계 과정
1. models.py
2. python manage.py makemigrations
3. python manage.py migrate로 변경 적용

장고 어드민 사용자 생성
python manage.py createsuperuser



View: 
- 특정 기능 제공 및 특정 템플릿이 있는 쟝고 앱의 웹 페이지 타입

사용방법: 
views.py 모듈에 뷰를 생성하고, urls.py 모듈에 path() 호출을 추가하여 view를 연결한다



Template: html 등의 보여줄 파일들
- 앱 하위에 templates 디렉터리를 만들고 관리한다
별도의 템플릿 언어를 제공하는데 변수, 필터, 태그, 주석 등의 4가지 기능을 제공한다


테스트:
test.py에서 테스트 코드를 작성하여 테스트를 진행할 수 있다
python manage.py test "앱 명"


위의 내용이 장고의 전반적인 동작 과정 및 내용입니다.
참고 자료: 
1. https://docs.djangoproject.com/en/4.2/
2. https://scshim.tistory.com/category/%ED%8C%8C%EC%9D%B4%EC%8D%AC/%EC%9E%A5%EA%B3%A0%28django%29


토이 프로젝트3를 진행하면서 막히는 부분이 있거나 더 공부해야할 부분이 있으면
프로젝트 진행과 함께 추가 공부를 진행하면서 해당 리포지토리를 업데이트해 나갈 계획입니다

